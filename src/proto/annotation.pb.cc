// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: annotation.proto

#include "proto/annotation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_annotation_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_annotation_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VisualBase;
}  // namespace protobuf_annotation_2eproto
namespace protobuf_style_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_style_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StyleObjectValue;
}  // namespace protobuf_style_2eproto
namespace xviz {
class VisualBaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VisualBase>
      _instance;
} _VisualBase_default_instance_;
class VisualDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Visual>
      _instance;
} _Visual_default_instance_;
}  // namespace xviz
namespace protobuf_annotation_2eproto {
static void InitDefaultsVisualBase() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xviz::_VisualBase_default_instance_;
    new (ptr) ::xviz::VisualBase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xviz::VisualBase::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VisualBase =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVisualBase}, {}};

static void InitDefaultsVisual() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xviz::_Visual_default_instance_;
    new (ptr) ::xviz::Visual();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xviz::Visual::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Visual =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsVisual}, {
      &protobuf_annotation_2eproto::scc_info_VisualBase.base,
      &protobuf_style_2eproto::scc_info_StyleObjectValue.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_VisualBase.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Visual.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xviz::VisualBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xviz::VisualBase, object_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xviz::Visual, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xviz::Visual, base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xviz::Visual, style_classes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xviz::Visual, inline_style_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::xviz::VisualBase)},
  { 6, -1, sizeof(::xviz::Visual)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::xviz::_VisualBase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xviz::_Visual_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "annotation.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020annotation.proto\022\004xviz\032\roptions.proto\032"
      "\013style.proto\"9\n\nVisualBase\022\021\n\tobject_id\030"
      "\001 \001(\t:\030\302\273\032\024core/annotation_base\"\211\001\n\006Visu"
      "al\022\036\n\004base\030\001 \001(\0132\020.xviz.VisualBase\022\025\n\rst"
      "yle_classes\030\002 \003(\t\022,\n\014inline_style\030\003 \001(\0132"
      "\026.xviz.StyleObjectValue:\032\302\273\032\026core/annota"
      "tion_visualB7\n\013com.xviz.v2B\017AnnotationPr"
      "otoP\001Z\004v2pb\242\002\004XVIZ\252\002\007xviz.V2b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 316);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "annotation.proto", &protobuf_RegisterTypes);
  ::protobuf_options_2eproto::AddDescriptors();
  ::protobuf_style_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_annotation_2eproto
namespace xviz {

// ===================================================================

void VisualBase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VisualBase::kObjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VisualBase::VisualBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_annotation_2eproto::scc_info_VisualBase.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xviz.VisualBase)
}
VisualBase::VisualBase(const VisualBase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_id().size() > 0) {
    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
  // @@protoc_insertion_point(copy_constructor:xviz.VisualBase)
}

void VisualBase::SharedCtor() {
  object_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VisualBase::~VisualBase() {
  // @@protoc_insertion_point(destructor:xviz.VisualBase)
  SharedDtor();
}

void VisualBase::SharedDtor() {
  object_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VisualBase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VisualBase::descriptor() {
  ::protobuf_annotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_annotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VisualBase& VisualBase::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_annotation_2eproto::scc_info_VisualBase.base);
  return *internal_default_instance();
}


void VisualBase::Clear() {
// @@protoc_insertion_point(message_clear_start:xviz.VisualBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool VisualBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xviz.VisualBase)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_id().data(), static_cast<int>(this->object_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xviz.VisualBase.object_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xviz.VisualBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xviz.VisualBase)
  return false;
#undef DO_
}

void VisualBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xviz.VisualBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xviz.VisualBase.object_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xviz.VisualBase)
}

::google::protobuf::uint8* VisualBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xviz.VisualBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_id = 1;
  if (this->object_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_id().data(), static_cast<int>(this->object_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xviz.VisualBase.object_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xviz.VisualBase)
  return target;
}

size_t VisualBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xviz.VisualBase)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string object_id = 1;
  if (this->object_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VisualBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xviz.VisualBase)
  GOOGLE_DCHECK_NE(&from, this);
  const VisualBase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VisualBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xviz.VisualBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xviz.VisualBase)
    MergeFrom(*source);
  }
}

void VisualBase::MergeFrom(const VisualBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xviz.VisualBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_id().size() > 0) {

    object_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_id_);
  }
}

void VisualBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xviz.VisualBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VisualBase::CopyFrom(const VisualBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xviz.VisualBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VisualBase::IsInitialized() const {
  return true;
}

void VisualBase::Swap(VisualBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VisualBase::InternalSwap(VisualBase* other) {
  using std::swap;
  object_id_.Swap(&other->object_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VisualBase::GetMetadata() const {
  protobuf_annotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_annotation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Visual::InitAsDefaultInstance() {
  ::xviz::_Visual_default_instance_._instance.get_mutable()->base_ = const_cast< ::xviz::VisualBase*>(
      ::xviz::VisualBase::internal_default_instance());
  ::xviz::_Visual_default_instance_._instance.get_mutable()->inline_style_ = const_cast< ::xviz::StyleObjectValue*>(
      ::xviz::StyleObjectValue::internal_default_instance());
}
void Visual::clear_inline_style() {
  if (GetArenaNoVirtual() == NULL && inline_style_ != NULL) {
    delete inline_style_;
  }
  inline_style_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Visual::kBaseFieldNumber;
const int Visual::kStyleClassesFieldNumber;
const int Visual::kInlineStyleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Visual::Visual()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_annotation_2eproto::scc_info_Visual.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xviz.Visual)
}
Visual::Visual(const Visual& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      style_classes_(from.style_classes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_base()) {
    base_ = new ::xviz::VisualBase(*from.base_);
  } else {
    base_ = NULL;
  }
  if (from.has_inline_style()) {
    inline_style_ = new ::xviz::StyleObjectValue(*from.inline_style_);
  } else {
    inline_style_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xviz.Visual)
}

void Visual::SharedCtor() {
  ::memset(&base_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inline_style_) -
      reinterpret_cast<char*>(&base_)) + sizeof(inline_style_));
}

Visual::~Visual() {
  // @@protoc_insertion_point(destructor:xviz.Visual)
  SharedDtor();
}

void Visual::SharedDtor() {
  if (this != internal_default_instance()) delete base_;
  if (this != internal_default_instance()) delete inline_style_;
}

void Visual::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Visual::descriptor() {
  ::protobuf_annotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_annotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Visual& Visual::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_annotation_2eproto::scc_info_Visual.base);
  return *internal_default_instance();
}


void Visual::Clear() {
// @@protoc_insertion_point(message_clear_start:xviz.Visual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  style_classes_.Clear();
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
  if (GetArenaNoVirtual() == NULL && inline_style_ != NULL) {
    delete inline_style_;
  }
  inline_style_ = NULL;
  _internal_metadata_.Clear();
}

bool Visual::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xviz.Visual)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .xviz.VisualBase base = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string style_classes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_style_classes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->style_classes(this->style_classes_size() - 1).data(),
            static_cast<int>(this->style_classes(this->style_classes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xviz.Visual.style_classes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .xviz.StyleObjectValue inline_style = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inline_style()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xviz.Visual)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xviz.Visual)
  return false;
#undef DO_
}

void Visual::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xviz.Visual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xviz.VisualBase base = 1;
  if (this->has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_base(), output);
  }

  // repeated string style_classes = 2;
  for (int i = 0, n = this->style_classes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->style_classes(i).data(), static_cast<int>(this->style_classes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xviz.Visual.style_classes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->style_classes(i), output);
  }

  // .xviz.StyleObjectValue inline_style = 3;
  if (this->has_inline_style()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_inline_style(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:xviz.Visual)
}

::google::protobuf::uint8* Visual::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xviz.Visual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .xviz.VisualBase base = 1;
  if (this->has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_base(), deterministic, target);
  }

  // repeated string style_classes = 2;
  for (int i = 0, n = this->style_classes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->style_classes(i).data(), static_cast<int>(this->style_classes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xviz.Visual.style_classes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->style_classes(i), target);
  }

  // .xviz.StyleObjectValue inline_style = 3;
  if (this->has_inline_style()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_inline_style(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xviz.Visual)
  return target;
}

size_t Visual::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xviz.Visual)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string style_classes = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->style_classes_size());
  for (int i = 0, n = this->style_classes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->style_classes(i));
  }

  // .xviz.VisualBase base = 1;
  if (this->has_base()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *base_);
  }

  // .xviz.StyleObjectValue inline_style = 3;
  if (this->has_inline_style()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *inline_style_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Visual::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xviz.Visual)
  GOOGLE_DCHECK_NE(&from, this);
  const Visual* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Visual>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xviz.Visual)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xviz.Visual)
    MergeFrom(*source);
  }
}

void Visual::MergeFrom(const Visual& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xviz.Visual)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  style_classes_.MergeFrom(from.style_classes_);
  if (from.has_base()) {
    mutable_base()->::xviz::VisualBase::MergeFrom(from.base());
  }
  if (from.has_inline_style()) {
    mutable_inline_style()->::xviz::StyleObjectValue::MergeFrom(from.inline_style());
  }
}

void Visual::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xviz.Visual)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Visual::CopyFrom(const Visual& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xviz.Visual)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Visual::IsInitialized() const {
  return true;
}

void Visual::Swap(Visual* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Visual::InternalSwap(Visual* other) {
  using std::swap;
  style_classes_.InternalSwap(CastToBase(&other->style_classes_));
  swap(base_, other->base_);
  swap(inline_style_, other->inline_style_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Visual::GetMetadata() const {
  protobuf_annotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_annotation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace xviz
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xviz::VisualBase* Arena::CreateMaybeMessage< ::xviz::VisualBase >(Arena* arena) {
  return Arena::CreateInternal< ::xviz::VisualBase >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xviz::Visual* Arena::CreateMaybeMessage< ::xviz::Visual >(Arena* arena) {
  return Arena::CreateInternal< ::xviz::Visual >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
